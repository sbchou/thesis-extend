library(lme4)
library(lmerTest)
lmm.data <- read.table('../DATA/EMOT/all_fields_and_body.csv', header=TRUE, sep = ",", quote = "'")
nrow(lmm.data)
library(lme4)
library(lmerTest)
data <- read.table('../DATA/EMOT/all_fields_no_body.csv', header=TRUE, sep = ",", quote = "'")
data <- read.table('../DATA/EMOT/all_fields_no_body.csv', header=TRUE, sep = ",")
data <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",")
v', header=TRUE, sep = ",")
nrow(lmm.data)
head(lmm.data)
nrow(data)
head(data)
data
head(data)
data <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
stories <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
head(stories)
stories <- stories[complete.cases(stories),]
nrow(stories)
library(lme4)
library(lmerTest)
stories <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
describe(stories)
head(stories)
colnames(stories)
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
summary(stories$emotionality)
stories$emotionality = as.numeric((stories$wc))
emot_corr <- lm(num_tweets ~ emotionality, stories)
summary(emot_corr)
library(lme4)
library(lmerTest)
stories <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
# SHOULD BE 2651
# COLUMNS:
# "X"               "url"             "sentiment_mean"  "num_tweets"      "wc"
# "negativ_ct"      "positiv_ct"      "negativ_percent" "positiv_percent" "emotionality"
# "positivity"
## First: WC and Num Tweets
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
## First: Emotionality and Num Tweets
stories$emotionality = as.numeric((stories$emotionality))
emot_corr <- lm(num_tweets ~ emotionality, stories)
summary(emot_corr)
head(stories$emotionality)
summary(stories$emotionality)
stories$emotionality
stories$log_emotionality <- log(stories$emotionality, 2)
stories$log_emotionality
stories$log_emotionality <- log(stories$emotionality, 2)
lg_emot_corr <- lm(num_tweets ~ log_emotionality, stories)
summary(lg_emot_corr)
stories$log_emotionality <- as.numeric(c(log(stories$emotionality, 2))
lg_emot_corr <- lm(num_tweets ~ log_emotionality, stories)
summary(lg_emot_corr)
stories$log_emotionality <- as.numeric(c(log(stories$emotionality, 2))
stories$log_emotionality <- as.numeric(c(log(stories$emotionality, 2)))
stories$log_emotionality <- as.numeric((log(stories$emotionality, 2)))
lg_emot_corr <- lm(num_tweets ~ log_emotionality, stories)
stories$emotionality = as.numeric((stories$emotionality))
emot_corr <- lm(num_tweets ~ emotionality, stories)
summary(emot_corr)
stories$positivity
stories$positivity = as.numeric((stories$positivity))
pos_corr <- lm(num_tweets ~ positivity, stories)
summary(pos_corr)
library(lme4)
library(lmerTest)
stories <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
# SHOULD BE 2651
## log(WC) and Num Tweets
stories$num_tweets = as.numeric((stories$num_tweets))
stories$log_wc = as.numeric((log(stories$wc)))
log_wc_corr <- lm(num_tweets ~ log_wc, stories)
summary(log_wc_corr)
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
summary(log_wc_corr)
## log10(WC) and Num Tweets
stories$num_tweets = as.numeric((stories$num_tweets))
stories$log10_wc = as.numeric((log(stories$wc, 10)))
log10_wc_corr <- lm(num_tweets ~ log10_wc, stories)
summary(log10_wc_corr)
stories$sqrt_wc = as.numeric((sqrt(stories$wc)))
sqrt_wc_corr <- lm(num_tweets ~ sqrt_wc, stories)
summary(sqrt_wc_corr)
plot(x = log_wc, y=num_tweets, stories)
plot(x = stories$log_wc, y=stories$num_tweets)
## log(WC) and log(Num Tweets)
stories$log_num_tweets = as.numeric((log(stories$num_tweets)))
loglog_wc_corr <- lm(log_num_tweets ~ log_wc, stories)
summary(loglog_wc_corr)
library(ggplot2)
library(lme4)
library(lmerTest)
stories <- read.table('../DATA/EMOT/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
stories.head()
ggplot(stories, aes(x=stories$log_emotionality, y=stories$num_tweets)) +
geom_point(shape=1)      # Use hollow circles
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets)) +
geom_point(shape=1)      # Use hollow circles
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets)) +
geom_point(shape=1))      # Use hollow circles
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets))) +
geom_point(shape=1)      # Use hollow circles
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets))) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets))) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth()            # Add a loess smoothed fit curve with confidence region
#> geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
stories <- stories[complete.cases(stories),]
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets))) +
geom_point(shape=1)      # Use hollow circles
ggplot(stories, aes(x=stories$log_emotionality, y=log(stories$num_tweets))) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
describe(stories$num_tweets)
summary(stories$num_tweets)
write.csv(stories, file = "stories_all_emots.csv")
library(lme4)
library(lmerTest)
stories <- read.table('../DATA/FOR_CORR/all_fields_no_title.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
# SHOULD BE 2651
## First: WC and Num Tweets
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
#             Estimate Std. Error t value Pr(>|t|)
#(Intercept) 50.425959   1.818541  27.729  < 2e-16 ***
#  wc          -0.004180   0.001438  -2.907  0.00368 **
# Multiple R-squared:  0.003182,	Adjusted R-squared:  0.002805
######### Word Count ###############
## log(WC) and Num Tweets
stories$log_wc = as.numeric((log(stories$wc)))
log_wc_corr <- lm(num_tweets ~ log_wc, stories)
summary(log_wc_corr)
## sqrt(WC) and Num Tweets
stories$sqrt_wc = as.numeric((sqrt(stories$wc)))
sqrt_wc_corr <- lm(num_tweets ~ sqrt_wc, stories)
summary(sqrt_wc_corr)
## log(WC) and log(Num Tweets)
stories$log_num_tweets = as.numeric((log(stories$num_tweets)))
loglog_wc_corr <- lm(log_num_tweets ~ log_wc, stories)
summary(loglog_wc_corr)
plot(x = stories$log_wc, y=stories$num_tweets)
plot(x = stories$log_wc, y=stories$log_num_tweets)
stories$log_emot = as.numeric((log(stories$emotionality)))
log_emot_corr <- lm(num_tweets ~ log_emot, stories)
summary(log_emot_corr)
summary(stories$log_emot)
summary(stories$emotionality)
stories$emot_wc = as.numeric((sqrt(stories$emotionality)))
sqrt_emot_corr <- lm(num_tweets ~ sqrt_emot, stories)
summary(sqrt_emot_corr)
stories$sqrt_emot = as.numeric((sqrt(stories$emotionality)))
sqrt_emot_corr <- lm(num_tweets ~ sqrt_emot, stories)
summary(sqrt_emot_corr)
emot_corr <- lm(num_tweets ~ emotionality, stories)
summary(emot_corr)
pos_corr <- lm(num_tweets ~ positivity, stories)
summary(pos_corr)
## log(pos) and Num Tweets
stories$log_pos = as.numeric((log(stories$positivity)))
log_pos_corr <- lm(num_tweets ~ log_pos, stories)
summary(log_pos_corr)
stories$log_pos = as.numeric((log(stories$positivity)))
log_pos_corr <- lm(num_tweets ~ log_pos[complete.cases(log_pos), ], stories)
log_pos_corr <- lm(num_tweets ~ log_pos, stories[complete.cases(stories), ])
stories$log_pos = as.numeric((log(stories$positivity)))
stories_nonull <- stories[complete.cases(stories), ]
log_pos_corr <- lm(num_tweets ~ log_pos, stories_nonull)
summary(log_pos_corr)
## log(emot) and Num Tweets
stories$log_emot = as.numeric((log(stories$emotionality + 1)))
log_emot_corr <- lm(num_tweets ~ log_emot, stories)
summary(log_emot_corr)
loglog_emot_corr <- lm(log_emot ~ log_wc, stories)
summary(loglog_emot_corr)
stories$log_pos = as.numeric((log(stories$positivity+1)))
log_pos_corr <- lm(num_tweets ~ log_pos, stories)
summary(log_pos_corr)
loglog_emot_corr <- lm(log_emot ~ log_wc, stories)
summary(loglog_emot_corr)
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",")
### CLINTON ###
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
nrow(stories)
head(stories)
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote = "'")
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",")
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote ="" )
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote ="" )
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
# SHOULD BE 2651
colnames(stories
)
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
head(stories)
### CLINTON ###
stories <- read.table('../DATA/FOR_CORR/clinton_w_emot.csv', header=TRUE, sep = ",", quote ="" )
nrow(stories)
head(stories)
# remove NaN for some reason the python code breaks the CSV
stories <- stories[complete.cases(stories),]
nrow(stories)
# 1964
#[1] "url"             "org"             "candid_name"     "num_tweets"      "num_tweets_all"  "sentiment_mean"
#[7] "wc"              "negativ_ct"      "positiv_ct"      "negativ_percent" "positiv_percent" "emotionality"
#[13] "positivity"
## First: WC and Num Tweets
stories$num_tweets = as.numeric((stories$num_tweets))
stories$wc = as.numeric((stories$wc))
wc_corr <- lm(num_tweets ~ wc, stories)
summary(wc_corr)
## log(WC) and Num Tweets
stories$log_wc = as.numeric((log(stories$wc)))
log_wc_corr <- lm(num_tweets ~ log_wc, stories)
summary(log_wc_corr)
## sqrt(WC) and Num Tweets
stories$sqrt_wc = as.numeric((sqrt(stories$wc)))
sqrt_wc_corr <- lm(num_tweets ~ sqrt_wc, stories)
summary(sqrt_wc_corr)
## log(WC) and log(Num Tweets)
stories$log_num_tweets = as.numeric((log(stories$num_tweets)))
loglog_wc_corr <- lm(log_num_tweets ~ log_wc, stories)
summary(loglog_wc_corr)
emot_corr <- lm(num_tweets ~ emotionality, stories)
summary(emot_corr)
## log(emot) and Num Tweets
stories$log_emot = as.numeric((log(stories$emotionality + 1)))
log_emot_corr <- lm(num_tweets ~ log_emot, stories)
summary(log_emot_corr)
## sqrt(emot) and Num Tweets
stories$sqrt_emot = as.numeric((sqrt(stories$emotionality)))
sqrt_emot_corr <- lm(num_tweets ~ sqrt_emot, stories)
summary(sqrt_emot_corr)
## log(emot) and log(Num Tweets)
loglog_emot_corr <- lm(log_emot ~ log_wc, stories)
summary(loglog_emot_corr)
## Plain
pos_corr <- lm(num_tweets ~ positivity, stories)
summary(pos_corr)
